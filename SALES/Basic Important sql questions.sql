use geeks;
show tables;
SELECT * FROM SAMPLESTORE;

/** WILDCARDS **/
SELECT * 
FROM SAMPLESTORE 
WHERE `SHIP DATE`  LIKE "2016-__-__" ; /**ESCAPE TO TREAT WILDCARDS AS LITERALS**/

SELECT * 
FROM SAMPLESTORE 
WHERE `SHIP DATE`  LIKE "%-11-%" ;

/**  calculate the total transaction amount for each customer for
 the current year. The output should contain Customer_Name and the total amount.**/
 SELECT `Customer Name`, SUM(`Sales`) as TOTAL_SALES
 FROM SAMPLESTORE 
 WHERE YEAR(`Order Date`)=YEAR(CURDATE())-8
 GROUP BY `Customer Name`;
 
 use geeks;
 SELECT * FROM SAMPLESTORE;
 SELECT MAX(PROFIT) AS MAXIMUM_PRO_FURNI From  SAMPLESTORE
 WHERE CATEGORY = 'Furniture';
 
 SELECT format(CATEGORY,4) FROM SAMPLESTORE;
 
 SELECT `ORDER ID`,SUBSTR(`ORDER ID`,9,14) AS ORDER_NUM , `Order Date`, date(NOW()) AS PRESENT_date
 FROM SAMPLESTORE;
  SELECT `ORDER ID`,MID(`ORDER ID`,9,14) AS ORDER_NUM , `Order Date`, NOW() AS PRESENT_TIME
 FROM SAMPLESTORE;
 
 /** count of distinct UNOQUE records in transac table tran id ae uniue while distinct customer can be there **/
 select COUNT(`Order ID`) AS ORIGNAL ,COUNT(distinct(`Order ID`)) AS CNT_UNIQUE FROM SAMPLESTORE;
  SELECT COUNT(`ORDER ID`) AS ORIGINAL , COUNT(DISTINCT(`ORDER ID`)) AS UNIQ FROM SAMPLESTORE ;
  
 /**DUPLICATE RECORDDS **/
 SELECT * FROM SAMPLESTORE; 
 SELECT `Customer id`,`Customer Name` FROM SAMPLESTORE
 GROUP BY `Customer id`,`Customer Name` having count(*)>1;
 
 WITH DUPLICATE_COUNT AS (SELECT `Customer id`,`Customer Name` FROM SAMPLESTORE
 GROUP BY `Customer id`,`Customer Name` having count(*)>1)
 SELECT COUNT(*) AS PUR_MORE_THEN_ONES FROM DUPLICATE_COUNT;
 
 SELECT COUNT(*) AS duplicate_count 
FROM (
    SELECT `Customer id`, `Customer Name`
    FROM SAMPLESTORE
    GROUP BY `Customer id`, `Customer Name`
    HAVING COUNT(*) > 1
) AS DupCustomers;

 
 --  identify duplicate records in a table based on specific columns where both cust and order id same--
SELECT `Customer ID`, `Order ID`, COUNT(*) AS Duplicate_Count
FROM SAMPLESTORE
GROUP BY `Customer ID`,`Order ID`
HAVING COUNT(*) > 1;
SELECT `CUSTOMER ID`,`ORDER ID`,COUNT(*) AS DUPLICATE_COUNT FROM SAMPLESTORE
GROUP BY `Customer ID`,`ORDER ID`
HAVING COUNT(*) > 1;

-- return only one record per duplicate group, --
SELECT `Customer ID`, `Order ID`, COUNT(*) AS Duplicate_Count
FROM SAMPLESTORE
GROUP BY `Customer ID`,`Order ID`
HAVING COUNT(*) = 1;

 

-- ELIMINATE DUPLICATE--
DELETE FROM samplestore WHERE`Customer ID` NOT IN 
(
SELECT `Customer ID` FROM 
(
SELECT MIN(`Customer ID`) as Uniq FROM samplestore GROUP BY `Customer Name`) as dist
);
 
WITH DUPLICATERECORDS AS (SELECT * , ROW_NUMBER() OVER (PARTITION BY `CUSTOMER ID`,`CUSTOMER NAME` ORDER BY `SHIP DATE` DESC) AS ROW_NUM
FROM SAMPLESTORE)
DELETE FROM SAMPLESTORE WHERE `CUSTOMER ID` IN
(SELECT `CUSTOMER ID` FROM DUPLICATERECORDS WHERE ROW_NUM > 1);
 
 DELETE S1 FROM SAMPLESTORE S1 
 JOIN SAMPLESTORE S2 ON S1.`CUSTOMER ID` = S2.`CUSTOMER ID`
 AND S1.`CUSTOMER NAME` = S2.`CUSTOMER NAME`
 AND S1.`SHIP DATE` < S2.`SHIP DATE`;
 
 CREATE TABLE SAMPLESTORE_CLEAN AS 
 SELECT DISTINCT * FROM SAMPLESTORE;


DELETE T1 FROM SAMPLESTORE T1
JOIN (SELECT `CUSTOMER ID` , MIN(`CUSTOMER ID`) AS KEEP_ID FROM SAMPLESTORE GROUP BY `CUSTOMER ID`) T2
ON T1.`CUSTOMER ID` = T2.`CUSTOMER ID`
AND T1.`CUSTOMER ID` > T2.KEEP_ID;

 
 
 SELECT `CATEGORY` FROM SAMPLESTORE
 GROUP BY `CATEGORY` having sum(Quantity) > 2;
 select * from samplestore;
 SELECT  `CUSTOMER ID`,`CUSTOMER NAME`,COUNT(*) AS CNT FROM SAMPLESTORE GROUP BY `CUSTOMER ID`,`CUSTOMER NAME`;
 

 